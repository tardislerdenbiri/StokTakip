@model StokTakipCoreV3.Models.FirmaListAndFirmaAdd
@{
    ViewData["Title"] = "Müşteriler";
    Layout = "~/Views/Shared/_UILayout.cshtml";
}

<!-- Müşteri Liste Start -->
<div class="page-heading">
    <div class="page-title">
        <div class="row">
            <div class="col-12 col-md-6 order-md-1 order-last">
                <h3>Sisteme Kayıtlı Müşteriler</h3>
                <p class="text-subtitle text-muted">Bu sayfada kayıtlı müsterileri ve müsterileri geçmişe dönük kayıtlı siparişlerini görüntüleyebilirsiniz. </p>
            </div>
        </div>
    </div>
    <section class="section">
        <div class="card">
            @*<div class="card-header">

            </div>*@
            <div class="card-body">
                <table class="table table-striped" id="table1">
                    <thead>
                        <tr>
                            <th>Adı</th>
                            <th>Adres</th>
                            <th>Telefon</th>
                            <th>İşlem</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Companies)
                        {
                            <tr>
                                <td>@item.CompanyName</td>
                                <td>@item.CompanyAdress</td>
                                <td>@item.CompanyPhone</td>
                                <td> <a role="button" href="/Musteriler/MusteriGoruntule/@item.CompanyID" class="btn btn-info btn-block">Detay</a></td>
                            </tr>
                        }
                    </tbody>
                </table>
                <button type="button" class="btn btn-info" data-bs-toggle="modal"
                        data-bs-target="#Musteriekle">
                    Musteri Ekle
                </button>
            </div>
        </div>

    </section>
</div>
<!-- Müşteri Liste End -->



<!--Modal Start -->

@await Html.PartialAsync("/Views/Musteriler/_MusteriEkle.cshtml")

<!--Modal End -->



@* ---------------------------Toast Bildirimleri---------------------------------*@

@if (TempData["MusteriEkle"] != null)
{


    <script>
        const Toast = Swal.mixin({
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer)
                toast.addEventListener('mouseleave', Swal.resumeTimer)
            }
        })

        Toast.fire({
            icon: 'success',
            title: 'Başarılı! Musteri sisteme eklendi.'
        })
    </script>
}
@if (TempData["MusteriSil"] != null)
{


    <script>
        const Toast = Swal.mixin({
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer)
                toast.addEventListener('mouseleave', Swal.resumeTimer)
            }
        })

        Toast.fire({
            icon: 'success',
            title: 'Başarılı! Musteri sistemden silindi.'
        })
    </script>
}
@* -------------------------Toast Bildirimleri Son--------------------------------*@